// SPDX-License-Identifier: GPL-2.0+
/dts-v1/;

#include "nvidia-gb200nvl-hmc-core.dtsi"
#include <dt-bindings/leds/common.h>

/ {
	model = "AST2600 GB200NVL HMC";
	compatible = "aspeed,ast2600";

	aliases {
                serial2 = &uart3;
		serial4 = &uart5;
	};

	chosen {
		stdout-path = &uart5;
		bootargs = "console=tty0 console=ttyS4,115200 earlyprintk";
	};

	memory@80000000 {
		reg = <0x80000000 0x40000000>;
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		ramoops@a0000000 {
			compatible = "ramoops";
			reg = <0xa0000000 0x100000>; /* 1MB */
			record-size = <0x10000>; /* 64KB */
			max-reason = <2>; /* KMSG_DUMP_OOPS */
		};
	};

        power-gpios{
                n2-gpios = <&gpio0 ASPEED_GPIO(N, 2) (GPIO_ACTIVE_HIGH|GPIO_PULL_UP)>;
                n3-gpios = <&gpio0 ASPEED_GPIO(N, 3) (GPIO_ACTIVE_HIGH|GPIO_PULL_UP)>;
        };
        leds {
            compatible = "gpio-leds";
            // Non-LEDs:
            //   HMC_READY-O GPIO pin (not an LED) is being bound to the GPIO LED driver.
            // Notes:
            // * This a workaround and leverages the GPIO LED driver to enable control of
            //   reset tolerance and still allow the GPIO to be controlled from user space.
            // * The standard Linux GPIO driver allows control of reset tolerance, however
            //   does not expose user space APIs for user space control of the GPIO pin.
            // * GPIO_TRANSITORY = reset tolerance is disabled
            // * Any non-leds should be added below this line.
            hmc_ready_noled {
                gpios = <&gpio0 ASPEED_GPIO(M, 5) (GPIO_ACTIVE_HIGH|GPIO_TRANSITORY)>;
            };
        };
};





&fmc {
    status = "okay";
    flash@0 {
        status = "okay";
        compatible = "jedec,spi-nor";
        label = "bmc";
        spi-max-frequency = <50000000>;
#include "aspeed/aspeed-bmc-nvidia-gh-flash-layout-64.dtsi"
    };
};

&fmcraw {
    status = "okay";
    spidev@0 {
        compatible = "hgx,glacier";
        status = "okay";
    };
};

&spi1raw {
    status = "okay";
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_spi1_default>;
    spidev@0 {
        spi-max-frequency = <1000000>;
        compatible = "hgx,glacier";
        status = "okay";
    };
};

&spi1 {
    status = "okay";
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_spi1_default>;
    flash@0 {
        status = "okay";
        label = "pciechip";
        spi-max-frequency = <50000000>;
        partitions {
            compatible = "fixed-partitions";
            #address-cells = <1>;
            #size-cells = <1>;

            cfg-env@0 {
                reg = <0x0 0x10000>;            // 128KB at offset 0
                label = "pciechip_config";
            };

        };
    };
};

&spi2 {
    status = "okay";
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_spi2_default>;

    // Data SPI is 64MB in size
    flash@0 {
        status = "okay";
        label = "config";
        spi-max-frequency = <50000000>;
        partitions {
            compatible = "fixed-partitions";
            #address-cells = <1>;
            #size-cells = <1>;

            u-boot-env@0 {
                reg = <0x0 0x40000>;            // 256KB at offset 0
                label = "u-boot-env";
            };

            rwfs@40000 {
                reg = <0x40000 0x1000000>;      // 16MB at offset 0x40000
                label = "rwfs";
            };

            log@0x1040000 {
                reg = <0x1040000 0x2800000>;    // 40MB at offset 0x1040000
                label = "log";                  // Move log to EMMC, make this unused
            };
        };
    };
};

&rtc {
        status = "okay";
};

&uart3 {
	status = "okay";
};

&uart5 {
	// BMC Debug Console
	status = "okay";
};

/*
 * Enable port A as device (via the virtual hub) and port B as
 * host by default on the eval board. This can be easily changed
 * by replacing the override below with &ehci0 { ... } to enable
 * host on both ports.
 */
&ehci0 {
   status = "okay";
};
// USB 2.0 to HMC & Host BMC connectivity
&udc {
    status = "okay";
};

// I2C1
&i2c0 {             
    status = "okay";
    clock-frequency = <400000>;
    multi-master;
    i2c-scl-clk-low-timeout-us = <32000>;
    i2c-tck-thddat-config = <0x0099EC00>;
};                  

// I2C2
// Module 0 PFGA
&i2c1 {
    status = "okay";
    clock-frequency = <400000>;
    i2c-tck-thddat-config = <0x0099EC00>;
    pca9555@24 {
        compatible = "nxp,pca9555";
        reg = <0x24>;
        gpio-controller;
        #gpio-cells = <2>;

        #address-cells = <1>;
        #size-cells = <0>;

        gpio-line-names =
            "HMC_SPI_MUX_SEL_1V8",
            "BRDG_INT_N",
            "BRDG_RESET_N",
            "BRDG_MUX_SEL_IOX",
            "MUX_SEL_FPGA_BRDG_1V8",
            "IO_BRD_B2B_SPI_MUX_SEL",
            "IOEXP3_0_6",
            "IOEXP3_0_7",
            "IOEXP3_1_0",
            "IOEXP3_1_1",
            "IOEXP3_1_2",
            "IOEXP3_1_3",
            "IOEXP3_1_4",
            "IOEXP3_1_5",
            "IOEXP3_1_6",
            "IOEXP3_1_7";
    };
};

// I2C3
// Module 1 PFGA
&i2c2 {             
    status = "okay";
    clock-frequency = <400000>;
    i2c-tck-thddat-config = <0x0099EC00>;
};    

// I2C4
// HMC FRU EEPROM
&i2c3 {
    status = "okay";
    clock-frequency = <400000>;
    multi-master;
    i2c-scl-clk-low-timeout-us = <32000>;
    i2c-tck-thddat-config = <0x0099EC00>;
};

// I2C5
&i2c4 {
    status = "disabled";
};

// I2C6
&i2c5 {
    status = "disabled";
};

// I2C7
// MUX to M.2
&i2c6 {
    status = "okay";
    clock-frequency = <400000>;
    i2c-tck-thddat-config = <0x0099EC00>;
};

// I2C8
&i2c7 {
    status = "disabled";
};

// I2C9
// HMC Temp Sensor
// CPLD
&i2c8 {
    status = "okay";
    // This bus should run at default speed 100KHz
    clock-frequency = <400000>;
    i2c-tck-thddat-config = <0x0099EC00>;
};

// I2C10
&i2c9 {
    status = "disabled";
};

// I2C11
&i2c10 {
    status = "disabled";
};

// I2C12
&i2c11 {
    status = "disabled";
};

// I2C13
// MUX to UPHY3 SMBus A 2P (Module 1)
&i2c12 {
    status = "okay";
    clock-frequency = <100000>;
    multi-master;
    i2c-scl-clk-low-timeout-us = <32000>;
    i2c-tck-thddat-config = <0x00EFD000>;
};

// I2C14
&i2c13 {
    status = "disabled";
};

// I2C15
&i2c14 {
    status = "disabled";
};

// I2C16
&i2c15 {
    status = "disabled";
};

&mctp {
    status = "okay";
};

&jtag0 {
    mux-gpios = <&gpio0 186 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
    status = "okay";
};

// Enable emmc
&emmc_controller {
    status = "okay";
};

&emmc {
    non-removable;
    bus-width = <4>;
    max-frequency = <52000000>;
};

&rng {
        status = "okay";
};
